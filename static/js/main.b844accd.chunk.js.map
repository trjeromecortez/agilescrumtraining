{"version":3,"sources":["components/navigation.jsx","components/header.jsx","components/features.jsx","components/about.jsx","components/image.jsx","components/gallery.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Navigation","props","id","className","type","data-toggle","data-target","href","style","height","width","src","marginLeft","target","Header","data","title","Features","useState","infoDialogOpen","setInfoDialogOpen","info","setInfo","setTitle","toggleInfoDialog","color","Grid","container","map","d","i","item","xs","Card","sx","maxWidth","onClick","onCardClick","CardMedia","component","image","img","alt","CardContent","Typography","gutterBottom","variant","fontSize","text","CardActions","Button","size","Dialog","open","fullWidth","onClose","DialogTitle","textTransform","fontWeight","DialogContent","showPlayButton","showFullscreenButton","items","galleryImages","original","thumbnail","originalHeight","useBrowserFullscreen","lineHeight","marginBottom","marginTop","activities","itinerary","budget","bestTimeToTravel","DialogActions","About","paragraph1","paragraph2","Image","largeImage","smallImage","isGalleryVisible","setIsGalleryVisible","toggleGallery","data-lightbox-gallery","showThumbnails","DialogContentText","Gallery","length","index","App","SmoothScroll","speed","speedAsDuration","landingPageData","setLandingPageData","useEffect","JsonData","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b844accd.chunk.js","sourcesContent":["export const Navigation = (props) => {\n  return (\n    <nav id='menu' className='navbar navbar-default navbar-fixed-top'>\n      <div className='container'>\n        <div className='navbar-header'>\n          <button\n            type='button'\n            className='navbar-toggle collapsed'\n            data-toggle='collapse'\n            data-target='#bs-example-navbar-collapse-1'\n          >\n            {' '}\n            <span className='sr-only'>Toggle navigation</span>{' '}\n            <span className='icon-bar'></span>{' '}\n            <span className='icon-bar'></span>{' '}\n            <span className='icon-bar'></span>{' '}\n          </button>\n          <a className='navbar-brand page-scroll' href='#page-top'>\n            <img style={{ height: 30, width: 'auto' }} src={'/img/phflag.jpeg'} />\n            Pilipinas!\n          </a>{' '}\n        </div>\n        <div\n          className='collapse navbar-collapse'\n          id='bs-example-navbar-collapse-1'\n        >\n          <ul className='nav navbar-nav navbar-right'>\n            <li>\n              <a href='#portfolio' className='page-scroll'>\n                10 Beautiful Places\n              </a>\n            </li>\n            <li>\n              <a href='#features' className='page-scroll'>\n                Top 3 Places\n              </a>\n            </li>\n            {/* <li>\n              <a href='#about' className='page-scroll'>\n                Destinations\n              </a>\n            </li>\n            <li>\n              <a href='#services' className='page-scroll'>\n                Services\n              </a>\n            </li> */}\n            {/* <li>\n              <a href='#testimonials' className='page-scroll'>\n                Testimonials\n              </a>\n            </li>\n            <li>\n              <a href='#team' className='page-scroll'>\n                Team\n              </a>\n            </li>\n            <li>\n              <a href='#contact' className='page-scroll'>\n                Contact\n              </a>\n            </li> */}\n          </ul>\n        </div>\n      </div>\n      <div className=\"travel-advisory\">\n        Amid the global pandemic, please be advised that there might be special protocols and travel restrictions in place for everyone's safety. \n        <a style={{ marginLeft: 8 }} target=\"_blank\" href=\"https://philippines.travel/safetrip\">Click here</a> to learn more.\n      </div>\n    </nav>\n  )\n}\n","export const Header = (props) => {\n  return (\n    <header id='header'>\n      <div className='intro'>\n        <div className='overlay'>\n          <div className='container'>\n            <div className='row'>\n              <div className='col-md-8 col-md-offset-2 intro-text'>\n                <h1>\n                  {props.data ? props.data.title : 'Loading'}\n                  <span></span>\n                </h1>\n                <p>{props.data ? '' : 'Loading'}</p>\n                <a\n                  href='#features'\n                  className='btn btn-custom btn-lg page-scroll'\n                >\n                  Learn More\n                </a>{' '}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  )\n}\n","import { useState } from 'react';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport ImageGallery from 'react-image-gallery';\n\nexport const Features = (props) => {\n  const [infoDialogOpen, setInfoDialogOpen] = useState(false);\n  const [info, setInfo] = useState(null);\n  const [title, setTitle] = useState('');\n  const toggleInfoDialog = () => setInfoDialogOpen(!infoDialogOpen);\n  const onCardClick = (data) => {\n    toggleInfoDialog();\n    setTitle(data.title)\n    setInfo(data)\n  }\n  return (\n    <div id='features' className='text-center'>\n      <div className='container'>\n        <div className='col-md-10 col-md-offset-1 section-title'>\n          <h2 style={{color: '#FFF'}}>Top 3 Destinations To Visit</h2>\n        </div>\n        <Grid container>\n        {/* <img src=\"/img/bg-top3.png\" className=\"top-3-bg\" /> */}\n          {props.data\n            ? props.data.map((d, i) => (\n              <Grid item xs={4}>\n                <Card key={`${d.title}-${i}`} sx={{ maxWidth: 345 }} className=\"feature-card\" onClick={() => onCardClick(d)}>\n                  <CardMedia\n                    component=\"img\"\n                    height=\"140\"\n                    image={d.img}\n                    alt=\"green iguana\"\n                  />\n                  <CardContent className=\"feature-card-content\">\n                    <Typography gutterBottom variant=\"h4\" component=\"div\">\n                      {d.title}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\" sx={{ fontSize: 14 }}>\n                      {d.text}\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    <Button size=\"small\">Share</Button>\n                    <Button size=\"small\">Learn More</Button>\n                  </CardActions>\n                </Card>\n              </Grid>\n              ))\n            : 'Loading...'}\n        </Grid>\n      </div>\n      <Dialog\n        open={infoDialogOpen}\n        fullWidth\n        maxWidth=\"md\"\n        onClose={toggleInfoDialog}\n      >\n        <DialogTitle id=\"alert-dialog-title\" sx={{ fontSize: 24, textTransform: 'none', fontWeight: 'bold' }}>\n          {title}\n        </DialogTitle>\n        <DialogContent>\n          <ImageGallery \n            showPlayButton={false}\n            showFullscreenButton={false}\n            items={info && info.galleryImages.map((img) => ({ original: img, thumbnail: img, originalHeight: 400}))}\n            useBrowserFullscreen={false}\n          />\n          <Typography variant=\"h4\" gutterBottom>Description</Typography>\n          <Typography variant=\"body\" sx={{ lineHeight: 1.75, marginBottom: 4}}>{info && info.text}</Typography>\n          <Typography variant=\"h4\" gutterBottom sx={{ marginTop: 2 }}>Itineraries/Activities</Typography>\n          <ul>\n            {info && info.activities.map((itinerary) => <li>- {itinerary}</li>)}\n          </ul>\n          <Typography variant=\"h4\" sx={{ marginTop: 2 }} gutterBottom>Budget</Typography>\n          <Typography variant=\"body\">{info && info.budget}</Typography>\n          <Typography variant=\"h4\" sx={{ marginTop: 2 }} gutterBottom>Best Time To Travel</Typography>\n          <Typography variant=\"body\">{info && info.bestTimeToTravel}</Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={toggleInfoDialog}>Exit</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n","export const About = (props) => {\n  return (\n    <div id=\"about\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-xs-12 col-md-6\">\n            {\" \"}\n            <img src=\"img/summary.jpeg\" className=\"img-responsive summary-img\" alt=\"\" />{\" \"}\n          </div>\n          <div className=\"col-xs-12 col-md-6\">\n            <div className=\"about-text\">\n              <h2>Summary</h2>\n              <p>{props.data ? props.data.paragraph1 : \"loading...\"}</p>\n              <p>{props.data ? props.data.paragraph2: \"loading...\"}</p>\n              {/* <h3>Mabuhay Philippines!</h3> */}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Typography from '@mui/material/Typography';\nimport ImageGallery from 'react-image-gallery';\nimport \"react-image-gallery/styles/css/image-gallery.css\";\nexport const Image = ({ title, largeImage, smallImage, info, bestTimeToTravel }) => {\n  const [isGalleryVisible, setIsGalleryVisible] = useState(false);\n  const toggleGallery = () => setIsGalleryVisible(!isGalleryVisible);\n  return (\n    <div className='portfolio-item'>\n      <div className='hover-bg'>\n        {' '}\n        <div\n          href={largeImage}\n          title={title}\n          data-lightbox-gallery='gallery1'\n          onClick={toggleGallery}\n        >\n          <div className='hover-text'>\n            <h4>{title}</h4>\n          </div>\n          <img\n            src={smallImage}\n            className='img-responsive'\n            alt={title}\n          />{' '}\n        </div>{' '}\n      </div>\n      {isGalleryVisible &&\n      <Dialog\n        open={isGalleryVisible}\n        fullWidth\n        maxWidth=\"md\"\n        onClose={toggleGallery}\n      >\n        <DialogTitle id=\"alert-dialog-title\" sx={{ fontSize: 24, textTransform: 'none', fontWeight: 'bold' }}>\n          {title}\n        </DialogTitle>\n        <DialogContent>\n          <ImageGallery \n            showPlayButton={false}\n            showFullscreenButton={false}\n            items={[{ original: largeImage, thumbnail: largeImage, originalHeight: 500}]}\n            useBrowserFullscreen={false}\n            showThumbnails={false}\n          />\n          {info && <DialogContentText sx={{fontSize: 16, marginTop: 2 }}>\n            {info}\n\n          <Typography variant=\"h4\" sx={{ marginTop: 2 }} gutterBottom>Best Time To Travel</Typography>\n          <Typography variant=\"body\">{bestTimeToTravel}</Typography>\n          </DialogContentText>}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={toggleGallery}>Exit</Button>\n        </DialogActions>\n      </Dialog>\n      }\n    </div>\n  )\n}","import { Image } from \"./image\";\n\nexport const Gallery = (props) => {\n  return (\n    <div id='portfolio' className='text-center'>\n      <div className='container'>\n        <div className='section-title'>\n          <h2>Top 10 Beautiful Places</h2>\n          <p>\n            Explore the wonderful places in the Philippines\n          </p>\n        </div>\n        <div className='row'>\n          <div className='portfolio-items'>\n            {props.data\n              ? props.data.map((d, i) => (\n                <div key={`${d.title}-${i}`} className={i !== props.data.length - 1 ? 'col-sm-4 col-md-4 col-lg-4' : 'col-sm-12 col-md-12 last-gallery-item'}>\n                  <Image index={i} title={d.title} largeImage={d.largeImage} smallImage={d.smallImage} info={d.info} bestTimeToTravel={d.bestTimeToTravel} />\n                </div>\n              ))\n              : 'Loading...'}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { useState, useEffect } from \"react\";\nimport { Navigation } from \"./components/navigation\";\nimport { Header } from \"./components/header\";\nimport { Features } from \"./components/features\";\nimport { About } from \"./components/about\";\nimport { Services } from \"./components/services\";\nimport { Gallery } from \"./components/gallery\";\nimport { Testimonials } from \"./components/testimonials\";\nimport { Team } from \"./components/Team\";\nimport { Contact } from \"./components/contact\";\nimport JsonData from \"./data/data.json\";\nimport SmoothScroll from \"smooth-scroll\";\nimport \"./App.css\";\n\nexport const scroll = new SmoothScroll('a[href*=\"#\"]', {\n  speed: 1000,\n  speedAsDuration: true,\n});\n\nconst App = () => {\n  const [landingPageData, setLandingPageData] = useState({});\n  useEffect(() => {\n    setLandingPageData(JsonData);\n  }, []);\n\n  return (\n    <div>\n      <Navigation />\n      <Header data={landingPageData.Header} />\n      <Gallery data={landingPageData.Gallery}/>\n      <Features data={landingPageData.Features} />\n      <About data={landingPageData.About} />\n      {/* <Services data={landingPageData.Services} /> */}\n      {/* <Testimonials data={landingPageData.Testimonials} />\n      <Team data={landingPageData.Team} /> */}\n      {/* <Contact data={landingPageData.Contact} /> */}\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}